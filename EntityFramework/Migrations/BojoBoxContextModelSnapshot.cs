// <auto-generated />
using System;
using BojoBox.EntityFramework;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace BojoBox.EntityFramework.Migrations
{
    [DbContext(typeof(BojoBoxContext))]
    partial class BojoBoxContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.2-servicing-10034")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("BojoBox.EntityFramework.Entities.Franchise", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CurrentTeamId");

                    b.Property<int>("LeagueId");

                    b.HasKey("Id");

                    b.HasIndex("CurrentTeamId")
                        .IsUnique();

                    b.HasIndex("LeagueId");

                    b.ToTable("Franchises");
                });

            modelBuilder.Entity("BojoBox.EntityFramework.Entities.Goalie", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("LeagueId");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.HasIndex("LeagueId");

                    b.ToTable("Goalies");
                });

            modelBuilder.Entity("BojoBox.EntityFramework.Entities.GoalieSeason", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("GamesPlayed");

                    b.Property<int>("GoalieId");

                    b.Property<int>("Losses");

                    b.Property<int>("Season");

                    b.Property<int?>("SubtotalForId");

                    b.Property<int?>("TeamId");

                    b.Property<int>("Wins");

                    b.Property<bool>("isPlayoffs");

                    b.HasKey("Id");

                    b.HasIndex("GoalieId");

                    b.HasIndex("SubtotalForId");

                    b.HasIndex("TeamId");

                    b.ToTable("GoalieSeasons");
                });

            modelBuilder.Entity("BojoBox.EntityFramework.Entities.League", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Acronym");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Leagues");
                });

            modelBuilder.Entity("BojoBox.EntityFramework.Entities.Skater", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("LeagueId");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.HasIndex("LeagueId");

                    b.ToTable("Skaters");
                });

            modelBuilder.Entity("BojoBox.EntityFramework.Entities.SkaterSeason", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Assists");

                    b.Property<int>("GamesPlayed");

                    b.Property<int>("Goals");

                    b.Property<int>("Season");

                    b.Property<int>("SkaterId");

                    b.Property<int?>("SubtotalForId");

                    b.Property<int?>("TeamId");

                    b.Property<bool>("isPlayoffs");

                    b.HasKey("Id");

                    b.HasIndex("SkaterId");

                    b.HasIndex("SubtotalForId");

                    b.HasIndex("TeamId");

                    b.ToTable("SkaterSeasons");
                });

            modelBuilder.Entity("BojoBox.EntityFramework.Entities.Team", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Acronym");

                    b.Property<int?>("FranchiseId");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.HasIndex("FranchiseId");

                    b.ToTable("Teams");
                });

            modelBuilder.Entity("BojoBox.EntityFramework.Entities.Franchise", b =>
                {
                    b.HasOne("BojoBox.EntityFramework.Entities.Team", "CurrentTeam")
                        .WithOne()
                        .HasForeignKey("BojoBox.EntityFramework.Entities.Franchise", "CurrentTeamId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("BojoBox.EntityFramework.Entities.League", "League")
                        .WithMany("Franchises")
                        .HasForeignKey("LeagueId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("BojoBox.EntityFramework.Entities.Goalie", b =>
                {
                    b.HasOne("BojoBox.EntityFramework.Entities.League", "League")
                        .WithMany("Goalies")
                        .HasForeignKey("LeagueId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("BojoBox.EntityFramework.Entities.GoalieSeason", b =>
                {
                    b.HasOne("BojoBox.EntityFramework.Entities.Goalie", "Goalie")
                        .WithMany("Seasons")
                        .HasForeignKey("GoalieId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("BojoBox.EntityFramework.Entities.GoalieSeason", "SubtotalFor")
                        .WithMany("SubTotals")
                        .HasForeignKey("SubtotalForId");

                    b.HasOne("BojoBox.EntityFramework.Entities.Team", "Team")
                        .WithMany("GoalieSeasons")
                        .HasForeignKey("TeamId");
                });

            modelBuilder.Entity("BojoBox.EntityFramework.Entities.Skater", b =>
                {
                    b.HasOne("BojoBox.EntityFramework.Entities.League", "League")
                        .WithMany("Skaters")
                        .HasForeignKey("LeagueId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("BojoBox.EntityFramework.Entities.SkaterSeason", b =>
                {
                    b.HasOne("BojoBox.EntityFramework.Entities.Skater", "Skater")
                        .WithMany("Seasons")
                        .HasForeignKey("SkaterId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("BojoBox.EntityFramework.Entities.SkaterSeason", "SubtotalFor")
                        .WithMany("SubTotals")
                        .HasForeignKey("SubtotalForId");

                    b.HasOne("BojoBox.EntityFramework.Entities.Team", "Team")
                        .WithMany("SkaterSeasons")
                        .HasForeignKey("TeamId");
                });

            modelBuilder.Entity("BojoBox.EntityFramework.Entities.Team", b =>
                {
                    b.HasOne("BojoBox.EntityFramework.Entities.Franchise", "Franchise")
                        .WithMany("Teams")
                        .HasForeignKey("FranchiseId")
                        .OnDelete(DeleteBehavior.Restrict);
                });
#pragma warning restore 612, 618
        }
    }
}
